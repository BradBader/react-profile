{"version":3,"sources":["images/imgone.jpg","components/header/header.js","components/footer/footer.js","components/aboutme/aboutme.js","components/profileprojects/profileprojects.js","components/portfolio/portfolio.js","components/contact/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","id","class","href","Component","Footer","AboutMe","alt","src","Profile","ProfileProject","this","props","name","image","key","link","Portfolio","state","projects","Temp","map","profileprojects_profileprojects","App","react_router_dom","header_header","react_router","exact","path","component","footer_footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,o5BC4BzBC,0LAvBP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAIE,GAAG,SAAP,oBACAJ,EAAAC,EAAAC,cAAA,OAAKG,MAAM,iBAGHL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,uBAAR,aACJN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,mBAAR,qBAXfC,cCeNC,0LAbP,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,KAAGE,GAAG,OAAN,iBALCG,+BCcNE,mLAZP,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,GAAG,WAAP,YAEAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUO,IAAI,gBAAgBN,GAAG,aAAaO,IAAKC,MAElEZ,EAAAC,EAAAC,cAAA,6QARMK,qBCmBPM,0LAdP,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,OAAKQ,IAAKI,KAAKC,MAAMC,KAAML,IAAKG,KAAKC,MAAME,MAAOC,IAAKJ,KAAKC,MAAMX,GAAIE,KAAMQ,KAAKC,MAAMI,OAEvFnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBG,KAAMQ,KAAKC,MAAMI,MAAOL,KAAKC,MAAML,aARtDH,cC6Bda,oNA1BXC,MAAQ,CACJC,SAAUC,2EAIV,OACIvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,GAAG,WAAP,aACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEPW,KAAKO,MAAMC,SAASE,IAAI,SAAAF,GAAQ,OAC5BtB,EAAAC,EAAAC,cAACuB,EAAD,CACIP,IAAKI,EAASlB,GACdA,GAAIkB,EAASlB,GACbM,IAAKY,EAASN,KACdC,MAAOK,EAASL,MAChBE,KAAMG,EAASH,kBAlBvBZ,cCHFA,YC8BPmB,MAxBf,WACE,OACE1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0B,EAAD,MAEA5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACE7B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,sBAAsBC,UAAWZ,IACnDpB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWvB,OAOrDT,EAAAC,EAAAC,cAAC+B,EAAD,SCdYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fdab4572.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imgone.cdf4bf82.jpg\";","import React, { Component } from \"react\"\r\nimport \"./header.css\"\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"hbox0\">\r\n                    <h2 id=\"llame\">Brad Bader, Esq.</h2>\r\n                    <div class=\"headerWrapper\">\r\n\r\n                        \r\n                            <ul>\r\n                                <li><a href=\"/react-profile/taco\">Projects</a></li>\r\n                                <li><a href=\"/react-profile/\">About</a></li>\r\n                                {/* <li><a href=\"/contact\">Contact</a></li> */}\r\n                          \r\n                            </ul>\r\n                      \r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport \"./footer.css\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <div className=\"fbox0\">\r\n                    <p id=\"fin\">.fin</p>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\"\r\nimport Profile from \"../../images/imgone.jpg\"\r\n\r\nclass AboutMe extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 id=\"aboutMe\">About Me</h2>\r\n\r\n                <img className=\"crtThis\" alt=\"profile photo\" id=\"profileImg\" src={Profile} />\r\n\r\n                <p> I'm a coder, attorney, and dad to two children.  I work primarily on financial issues as an attorney.  I'm competent with front-end and back-end coding.  I have included a few select projects on the portfolio page. This site is, of course, a WIP. </p>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, { Component } from \"react\";\r\nimport \"./profileprojects.css\"\r\n\r\n\r\n\r\nclass ProfileProject extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"portfolioBox\">\r\n\r\n                <img alt={this.props.name} src={this.props.image} key={this.props.id} href={this.props.link} />\r\n                {/* <span className=\"card-title\">{this.props.alt}</span> */}\r\n                <a className=\"projA projBanner\" href={this.props.link}>{this.props.alt}</a>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileProject;\r\n","import React, { Component } from \"react\";\r\nimport Temp from \"../../placeholder.json\"\r\nimport ProfileProjects from \"../profileprojects/profileprojects\"\r\nimport \"./portfolio.css\"\r\n\r\n\r\nclass Portfolio extends Component {\r\n\r\n    state = {\r\n        projects: Temp\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 id=\"aboutMe\">Portfolio</h2>\r\n                <div className=\"projectGrid\">\r\n                    {\r\n                        this.state.projects.map(projects => (\r\n                            <ProfileProjects\r\n                                key={projects.id}\r\n                                id={projects.id}\r\n                                alt={projects.name}\r\n                                image={projects.image}\r\n                                link={projects.link}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolio;","import React, { Component } from \"react\"\r\n\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <h2 id=\"aboutMe\">Contact</h2>\r\n               \r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\"\nimport AboutMe from \"./components/aboutme/aboutme\"\nimport Portfolio from \"./components/portfolio/portfolio\"\nimport Contact from \"./components/contact/contact\"\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        {/* <Header2 /> */}\n        <div className=\"wrapper\">\n          <div className=\"box1\">\n            <Switch>\n              <Route exact path=\"/react-profile/taco\" component={Portfolio} />\n              <Route exact path=\"/react-profile/\" component={AboutMe} />\n\n              {/* <Route exact path=\"/contact\" component={Contact} /> */}\n            </Switch>\n\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}